{"version":3,"sources":["redux/actions.js","redux/actionCreators.js","components/Search.js","components/Image.js","components/AllProducts.js","components/Product.js","components/Cart.js","components/Header.js","redux/store.js","redux/productsReducer.js","redux/cartReducer.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCTS_LOADING","LOAD_PRODUCTS_SUCCESS","LOADING_FAILDED","CART_ITEMS_LOADING","CART_ITEMS_SUCCESS","CART_ITEMS_FAILDED","ADD_PRODUCT_TO_CART","REMOVE_PRODUCT_FROM_CART","CART_QTY_UP","CART_QTY_DOWN","SHOW_SEARCH_RESULTS","productsLoading","type","actions","loadProductsSuccess","data","payload","loadingFailed","errMess","search","keywords","fetchCartItems","dispatch","fetch","then","response","ok","error","Error","status","statusText","message","res","json","catch","putQtyUp","id","qty","_id","operation","method","body","JSON","stringify","headers","qtyUp","console","log","putQtyDown","qtyDown","postNewCartItem","productItem","newCartItem","title","price","toFixed","description","category","image","addProductToCart","removeProductFromCart","idToDelete","removeProd","mapDispatchToProps","connect","props","inputText","useRef","className","ref","Button","onClick","current","value","Image","Jumbotron","src","alt","fetchProducts","item","withRouter","state","products","productsReducer","searchResults","loading","isLoading","useEffect","map","product","index","Card","to","width","Spinner","color","children","useParams","theProduct","find","prod","name","cart","cartReducer","cartItems","useState","success","setSuccess","total","token","a","productList","paymentData","amount","items","alert","length","forEach","Table","striped","reponsive","href","stripeKey","billingAddress","shippingAddress","isOpen","setIsOpen","Navbar","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","NavItem","xmlns","height","fill","viewBox","d","rootReducer","combineReducers","action","correctedPrice","Object","defineProperty","resultWomen","filter","resultMen","resultJewelry","resultElectronics","resultProducts","toLowerCase","includes","correctedPrice_cart","hasTheItem","some","concat","updatedCart","targetItem","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","logger","App","path","exact","component","AllProducts","Product","Cart","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a602bf5f.chunk.js","sourcesContent":["export const PRODUCTS_LOADING = 'PRODUCTS_LOADING';\r\nexport const LOAD_PRODUCTS_SUCCESS = 'LOAD_PRODUCTS_SUCCESS';\r\nexport const LOADING_FAILDED = 'LOADING_FAILED';\r\nexport const CART_ITEMS_LOADING = 'CART_ITEMS_LOADING';\r\nexport const CART_ITEMS_SUCCESS = 'CART_ITEMS_SUCCESS';\r\nexport const CART_ITEMS_FAILDED = 'CART_ITEMS_FAILDED';\r\nexport const ADD_PRODUCT_TO_CART = 'ADD_PRODUCT_TO_CART';\r\nexport const REMOVE_PRODUCT_FROM_CART = 'REMOVE_PRODUCT_FROM_CART';\r\nexport const CART_LOADING = 'CART_LOADIN';\r\nexport const CART_ERROR = 'CART_ERROR';\r\nexport const CART_QTY_UP = 'CART_QTY_UP';\r\nexport const CART_QTY_DOWN = 'CART_QTY_DOWN';\r\nexport const SHOW_SEARCH_RESULTS = 'SHOW_SEARCH_RESULTS';","import * as actions from './actions';\r\n\r\n\r\n \r\n export const fetchProducts = () => dispatch => { \r\n   dispatch(productsLoading());\r\n    return fetch( \"/products\")\r\n    .then(response => {\r\n    if (response.ok) { // true if HTTP response status cose is within 200 - 299\r\n\r\n        return response;\r\n    } else {\r\n        const error = new Error(`Error ${response.status}: ${response.statusText}`);  // bad response from server  \r\n        error.response = response;\r\n        throw error;\r\n    }\r\n    },\r\n        error => { // no response from server at all\r\n            const errMess = new Error(error.message);\r\n            throw errMess;\r\n            }\r\n    )\r\n    .then(res => res.json())\r\n    .then(res => dispatch(loadProductsSuccess(res)))\r\n    .catch(error => dispatch(loadingFailed(error)))\r\n    };\r\n  \r\n    \r\nexport const productsLoading = () => ({\r\n    type: actions.PRODUCTS_LOADING\r\n    }); \r\n\r\nexport const loadProductsSuccess = data => ({\r\n    type: actions.LOAD_PRODUCTS_SUCCESS,\r\n    payload: data\r\n});\r\n\r\nexport const loadingFailed = errMess => ({\r\n    type: actions.LOADING_FAILDED,\r\n    payload: errMess\r\n});\r\n\r\n\r\n\r\n// search \r\nexport const search = keywords => ({\r\n    type: actions.SHOW_SEARCH_RESULTS,\r\n    payload: keywords\r\n})\r\n\r\n\r\n\r\n\r\n\r\n//CART actions\r\n\r\nexport const cartItemsLoading = () => ({\r\n    type: actions.CART_ITEMS_LOADING\r\n    }); \r\n\r\nexport const cartItemsSuccess = data => ({\r\n    type: actions.CART_ITEMS_SUCCESS,\r\n    payload: data\r\n});\r\n\r\nexport const cartItemsFailed = errMess => ({\r\n    type: actions.CART_ITEMS_FAILDED,\r\n    payload: errMess\r\n});\r\n\r\n export const addProductToCart = productItem  => ({\r\n    type: actions.ADD_PRODUCT_TO_CART,\r\n    payload: productItem\r\n}) \r\n\r\nexport const removeProd = id => ({\r\n    type: actions.REMOVE_PRODUCT_FROM_CART,\r\n    payload: id\r\n})\r\n\r\nexport const qtyUp = id  => ({\r\n    type: actions.CART_QTY_UP,\r\n    payload: id \r\n\r\n})\r\n\r\nexport const qtyDown = id => ({\r\n    type: actions.CART_QTY_DOWN,\r\n    payload: id\r\n\r\n})\r\n\r\n\r\n\r\n// updating Cart in Database\r\n\r\nexport const fetchCartItems = () => dispatch => { \r\n    dispatch(cartItemsLoading());\r\n     return fetch('/cart')\r\n     \r\n     .then(response => {\r\n     if (response.ok) { \r\n         return response;\r\n     } else {\r\n         const error = new Error(`Error ${response.status}: ${response.statusText}`);  \r\n         error.response = response;\r\n         throw error;\r\n     }\r\n     },\r\n         error => { \r\n             const errMess = new Error(error.message);\r\n             throw errMess;\r\n             }\r\n     )\r\n     .then(res => res.json())\r\n     .then(res => dispatch(cartItemsSuccess(res)))\r\n     .catch(error => dispatch(cartItemsFailed(error)))\r\n    \r\n     };\r\n \r\nexport const putQtyUp = (id) => dispatch =>  {\r\n\r\n\r\n    const qty = {\r\n        _id: id,\r\n        operation: \"up\"\r\n    }\r\n return fetch ('/cart', {\r\n     method: 'PUT',\r\n     body: JSON.stringify(qty),\r\n     headers: {\r\n      \"Content-Type\": \"application/json\" \r\n      }\r\n   })\r\n   .then(response => {\r\n          if (response.ok) {\r\n              return response;\r\n          } else {\r\n              const error = new Error(`Error ${response.status}: ${response.statusText}`);\r\n              error.response = response;\r\n              throw error;\r\n          }\r\n      },\r\n       error => { throw error; }\r\n      )\r\n    .then(response => response.json())\r\n    .then(response => dispatch(qtyUp(id)))\r\n    .catch(error => {\r\n        \r\n        console.log('quantity didnt update\\nError: ' + error.message);\r\n    }) \r\n}  \r\n\r\nexport const putQtyDown = (id) => dispatch =>  {\r\n    const qty = {\r\n        _id: id,\r\n        operation: \"down\"\r\n    }\r\n return fetch ('/cart', {\r\n     method: 'PUT',\r\n     body: JSON.stringify(qty),\r\n     headers: {\r\n      \"Content-Type\": \"application/json\" \r\n      }\r\n   })\r\n   .then(response => {\r\n          if (response.ok) {\r\n              return response;\r\n          } else {\r\n              const error = new Error(`Error ${response.status}: ${response.statusText}`);\r\n              error.response = response;\r\n              throw error;\r\n          }\r\n      },\r\n       error => { throw error; }\r\n      )\r\n    .then(response => response.json())\r\n    .then(response => dispatch(qtyDown(id)))\r\n    .catch(error => {\r\n        \r\n        console.log('quantity didnt update\\nError: ' + error.message);\r\n    })\r\n} \r\n\r\n\r\nexport const postNewCartItem = (productItem) => dispatch => {\r\n \r\n   const newCartItem = {\r\n      _id: productItem._id,\r\n      title: productItem.title,\r\n      price: productItem.price.toFixed(2),\r\n      description: productItem.description,\r\n      category: productItem.category,\r\n      image: productItem.image,\r\n      qty: 1\r\n   }\r\n\r\n \r\n\r\n   return fetch ('/cart', {\r\n       method: \"POST\",\r\n       body: JSON.stringify(newCartItem),\r\n       headers: {\r\n        \"Content-Type\": \"application/json\" \r\n        }\r\n     })\r\n     .then(response => {\r\n            if (response.ok) {\r\n                console.log(response)\r\n                return response;\r\n            } else {\r\n                const error = new Error(`Error ${response.status}: ${response.statusText}`);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n         error => { throw error; }\r\n        )\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addProductToCart(productItem)))\r\n    .catch(error => {\r\n        console.log('new cart item could not be posted\\nError: ' + error) ;     \r\n    })   \r\n}\r\n   \r\nexport const removeProductFromCart = (id) => dispatch => {\r\n  \r\n\r\n    const idToDelete = { _id: id }\r\n \r\n    return fetch ('/cart', {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify(idToDelete),\r\n        headers: {\r\n         \"Content-Type\": \"application/json\" \r\n         }\r\n      })\r\n      .then(response => {\r\n             if (response.ok) {\r\n                 console.log(response)\r\n                 return response;\r\n             } else {\r\n                 const error = new Error(`Error ${response.status}: ${response.statusText}`);\r\n                 error.response = response;\r\n                 throw error;\r\n             }\r\n         },\r\n          error => { throw error; }\r\n         )\r\n     .then(response => response.json())\r\n     .then(response => dispatch(removeProd(id)))    \r\n     .catch(error => {\r\n        console.log(' cart item could not be deleted\\nError: ' + error.message ) ;\r\n        \r\n     })\r\n     \r\n }\r\n    ","import React, { useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from 'reactstrap';\r\nimport {search} from '../redux/actionCreators'\r\n\r\n\r\nfunction Search (props) {\r\n    const inputText = useRef();\r\n    return (\r\n      <div className = 'container my-3'>\r\n        <input ref = {inputText}  className ='col-md-4 mr-5' />\r\n        <Button  id='buttons' className =' col' onClick ={() => props.search(inputText.current.value)}>Seacrh Products</Button>\r\n      </div>\r\n    ) \r\n}\r\n\r\nconst mapDispatchToProps =  {\r\n    search: (keywords) => (search(keywords))\r\n\r\n  }\r\n\r\n//export default Search;\r\n\r\nexport default connect(null,mapDispatchToProps)(Search);","import React from 'react';\r\nimport { Jumbotron} from 'reactstrap';\r\n\r\nconst Image = (props) => {\r\n  return (\r\n    <>\r\n      <Jumbotron>\r\n        <div className=\"row\">  \r\n          <h1 id=\"text\" >experience. learn. live..</h1>                    \r\n          <img className = 'img-fluid' src='image3.jpg'  alt='travel'/>\r\n        </div>\r\n      </Jumbotron>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Image;","\r\nimport React, { useEffect } from \"react\";\r\nimport { Card, Spinner, Button } from 'reactstrap';\r\nimport Search from './Search';\r\nimport Image from './Image';\r\nimport { Link, withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { fetchProducts,fetchCartItems,postNewCartItem} from '../redux/actionCreators'\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => { \r\n  return {\r\n      products: state.productsReducer.products,\r\n      searchResults: state.productsReducer.searchResults,\r\n      loading: state.productsReducer.isLoading\r\n  };\r\n};\r\n    \r\nconst mapDispatchToProps =  {\r\n  fetchProducts: () => fetchProducts(),\r\n  postNewCartItem: (item) => postNewCartItem(item),\r\n  fetchCartItems: (item) => fetchCartItems(item),\r\n\r\n}\r\n\r\n\r\nfunction AllProducts (props) {\r\n  \r\n   useEffect(() => {\r\n    props.fetchProducts();\r\n    props.fetchCartItems();\r\n\r\n  },[]); \r\n\r\n  \r\n  if (props.searchResults) {\r\n    return (\r\n      <>\r\n      <Image />\r\n      <div className = 'container'>\r\n        <div className ='row justify-content-center'>\r\n        \r\n        <Search  />\r\n        {props.searchResults.map((product, index) => (  \r\n          <Card id ='prodCard' className ='col-sm-3 mx-2 mb-4' key ={index}>\r\n            <Link to = {`/products/${product._id}`}>\r\n              <h5>{product.title}</h5>\r\n              <h4 className=\"fw-bolder\">${product.price}</h4>\r\n              <img src={product.image} alt={product.title} width = '100px' /> \r\n              <p className = 'mt-auto'>{product.description}</p>\r\n            </Link>\r\n            <Button id = 'buttons' className = 'mt-auto' onClick = {() => props.postNewCartItem(product)}>Add to Cart</Button> \r\n\r\n          </Card> \r\n        ))}\r\n        </div>\r\n      </div>  \r\n      </>\r\n    \r\n    )\r\n  } else {\r\n    if (props.loading) {\r\n      return (\r\n        <div>\r\n          <Spinner color=\"dark\" width = '500' className= \"mt-5\" children = \"\" />\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      <>\r\n      <Image />\r\n      <div className = 'container'>\r\n        <div className ='row justify-content-center'>\r\n        \r\n        <Search  />\r\n        {props.products.map((product, index) => (  \r\n          <Card id ='prodCard' className ='col-sm-2 mx-2 mb-4' key ={index}>\r\n            <Link to = {`/products/${product._id}`}>\r\n              <h5>{product.title}</h5>\r\n              <h4 className=\"fw-bolder\">${product.price}</h4>\r\n              <img src={product.image} alt={product.title} width = '100px' />\r\n              <p className = 'my-auto'>{product.description}</p>\r\n            </Link>\r\n            <Button  id = 'buttons' className = 'mt-auto' onClick = {() => props.postNewCartItem(product)}>Add to Cart</Button> \r\n          </Card> \r\n        ))}\r\n        </div>\r\n      </div>  \r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n  export default withRouter(connect(mapStateToProps, mapDispatchToProps)(AllProducts));\r\n\r\n ","import React from \"react\";\r\nimport  {useParams, Link} from 'react-router-dom';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst mapStateToProps = state => { \r\n    return {\r\n        products: state.productsReducer.products\r\n    };\r\n  };\r\n\r\n\r\nfunction Product (props) {\r\n    const {id} = useParams();\r\n \r\n    const theProduct = props.products.find(prod => prod._id === id)\r\n    \r\n    return (\r\n        <div className = 'container mt-5 ' >\r\n            < h1>{theProduct.title}</h1>\r\n            <h2>${theProduct.price}</h2>\r\n            <img src={theProduct.image} alt={theProduct.name} width = '200px' />\r\n            <p>{theProduct.description}</p>  \r\n            <Link className ='btn btn-success' to=\"/products\">All Products</Link>\r\n        </div> \r\n    )\r\n\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Product));","import React, { useEffect, useState  }from \"react\";\r\nimport { Button, Table} from 'reactstrap';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { removeProductFromCart, putQtyDown,putQtyUp,fetchCartItems} from '../redux/actionCreators';\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\n\r\n\r\n  \r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        cart: state.cartReducer.cartItems\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    removeProductFromCart: (id) => removeProductFromCart(id),\r\n    putQtyUp: (id) => putQtyUp(id),\r\n    putQtyDown: (id) => putQtyDown(id),\r\n    fetchCartItems: () =>  fetchCartItems() \r\n}\r\n\r\n\r\n\r\nfunction Cart (props) {\r\n    const [success, setSuccess] = useState(false)\r\n    \r\n  \r\n    let total = 0;\r\n\r\n    useEffect(() => {\r\n        props.fetchCartItems();   \r\n      },[]); \r\n   \r\n    if (props.cart.length !== 0) {\r\n        props.cart.forEach(item => {\r\n            total = total + (item.price * item.qty)\r\n            \r\n        });\r\n    }\r\n\r\n\r\n\r\n    async function handleToken(token) {\r\n        const productList = props.cart.map(item => item.title)\r\n        const paymentData = {\r\n            token: token,\r\n            amount: total.toFixed(2),\r\n            items: productList\r\n        };\r\n        await fetch('/checkout', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body:JSON.stringify(paymentData)\r\n            },)\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    alert(\"Purchase completed. Thank you!\")\r\n                    props.removeProductFromCart(null)\r\n                    setSuccess(true)\r\n                    return res;\r\n                } else {\r\n                    const error = new Error(`Error ${res.status}: ${res.statusText}`);\r\n                    error.res = res;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => { throw error; }\r\n            )\r\n            \r\n            .catch(error => {\r\n                console.log('Error: ' + error.message) ;     \r\n            })  \r\n    }\r\n   \r\n    if (success) {\r\n        return (\r\n            <div >\r\n                <h3 className ='mt-5 mb-5'>Thank you for your purchase!</h3>               \r\n                <Link id =\"buttons\" className = \"m-5 p-2\" to=\"/products\">Continue Shopping</Link>\r\n            </div>\r\n        )\r\n          \r\n    } else if ( props.cart.length === 0) {\r\n        return (\r\n            <div >\r\n                <h3 className ='mt-5 mb-5'>No Items</h3>\r\n                <Link id =\"buttons\" className = \"m-5 p-2\" to=\"/products\">Continue Shopping</Link>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className = 'container-lg'>\r\n                <div className = 'row'>\r\n                    <div className = 'table-responsive col-sm-9'>\r\n                        <Table striped reponsive className = 'table table-responsive mt-3 text-right'>\r\n                            <thead>\r\n                                <tr >\r\n                                <th className= 'col-md-2 text-uppercase'>Name</th>\r\n                                <th className= 'col-md-1 text-uppercase'>Price</th>\r\n                                <th className= 'col-md-3 text-uppercase '>Description</th>\r\n                                <th className= 'col-md-1 text-uppercase'>Qty</th>\r\n                                <th className= 'col-md-1 text-uppercase'>Subtotal</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {props.cart.map((product,index) => (\r\n                                <tr key = {index} >\r\n                                    <th >{product.title}</th>\r\n                                    <th >${product.price}</th>\r\n                                    <td className='small'>{product.description}</td>\r\n                                    <td>\r\n                                        <Button className='btn btn-sm' onClick = {() => props.putQtyDown(product._id)}>-</Button> \r\n                                         <span> {product.qty} </span>\r\n                                        <Button className='btn btn-sm' onClick = {() => props.putQtyUp(product._id)}>+</Button>\r\n                                        <a className='btn btn-sm mt-auto text-decoration-underline text-center' href  onClick = {() => props.removeProductFromCart(product._id)}>Remove</a>\r\n\r\n                                    </td>\r\n                                    <td>${product.price * product.qty}</td>\r\n                                </tr>  \r\n                            ))} \r\n                            </tbody>\r\n                        </Table>\r\n                    </div>  \r\n                    <div  className= 'col-md-3 mt-3' id = \"orderTotal\" >\r\n                        <h5>Your Total </h5>\r\n                        <h2>${total.toFixed(2)}</h2>\r\n                        <StripeCheckout \r\n                            stripeKey = \"pk_test_51JhRBrECGNUUIhhjpx6b8PpifvHuopYIQoWDrcnJpY8uvFFQlenQj1Dxv45LGMLRIH1bfqWOUd27GYqTlVMH7jP60022nrPrgl\"\r\n                            token = {handleToken}\r\n                            billingAddress\r\n                            shippingAddress\r\n                            amount = {total * 100}\r\n                           \r\n                        />\r\n                    </div>                                    \r\n                </div>       \r\n                <Link  to=\"/products\">\r\n                    <Button id =\"buttons\" className = \"mt-3 mb-5\">Continue Shopping</Button>\r\n                </Link>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n   \r\n \r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Cart));\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem\r\n} from 'reactstrap';\r\nimport { Link} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { search } from '../redux/actionCreators';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      cart: state.cartReducer.cartItems\r\n  };\r\n};\r\n\r\n\r\nconst mapDispatchToProps =  {\r\n  search: (keywords) => (search(keywords))\r\n\r\n}\r\n\r\nconst Header = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div className ='sticky-top' >\r\n      <Navbar   expand=\"md\">\r\n        <div className = 'container'>\r\n        <NavbarBrand href=\"/\"><h2> <span id = 'mern' >MERN</span>shop</h2></NavbarBrand>\r\n        <NavbarToggler onClick={toggle} id = \"toggler\" />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"\" navbar>\r\n            <NavItem className = 'text-start'>\r\n              <button  onClick = {() => props.search(\"women\")} >Women</button>\r\n            </NavItem>\r\n            <NavItem className = 'text-start'>\r\n              <button  onClick = {() => props.search(\"men\")} >Men</button>\r\n            </NavItem>\r\n            <NavItem className = 'text-start'>\r\n              <button  onClick = {() => props.search(\"jewelery\")} >Jewelery</button>\r\n            </NavItem >\r\n            <NavItem className = 'text-start'>\r\n              <button  onClick = {() => props.search(\"electronics\")} >Electronics</button>\r\n            </NavItem>\r\n           \r\n          </Nav>\r\n         \r\n            <Link to = '/cart' id ='cartIcon' href=\"/cart\" className=\"float-start\">\r\n              <svg  xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-bag-fill align-middle m-1\" viewBox=\"0 0 16 16\">\r\n              <path d=\"M8 1a2.5 2.5 0 0 1 2.5 2.5V4h-5v-.5A2.5 2.5 0 0 1 8 1zm3.5 3v-.5a3.5 3.5 0 1 0-7 0V4H1v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V4h-3.5z\"/>\r\n              </svg>\r\n              <span className='align-text-top'>{props.cart.length}</span>\r\n            </Link>\r\n\r\n       \r\n          \r\n        </Collapse>\r\n\r\n        </div>\r\n        \r\n      </Navbar>\r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Header);\r\n","import { createStore, combineReducers, applyMiddleware,compose } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { productsReducer } from './productsReducer';\r\n//import { persistReducer} from 'redux-persist';\r\nimport { cartReducer } from \"./cartReducer\";\r\n//import storage from 'redux-persist/lib/storage';\r\n//import autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n   productsReducer,\r\n   cartReducer\r\n  \r\n})\r\n\r\n\r\n/* const persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    stateReconciler: autoMergeLevel2,\r\n} */\r\n //const persistedreducer = persistReducer(persistConfig, rootReducer);\r\n   \r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\nexport const configureStore = () => createStore (\r\n    //persistedreducer,\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk, logger))\r\n)\r\n  \r\n    \r\n\r\n","import * as actions from \"./actions\"\r\n//import { productsData } from \"../shared/productsData\";\r\n\r\nexport const productsReducer = (state = {\r\n    products: []\r\n}, action) => {\r\n    \r\n    switch (action.type) {\r\n        case actions.PRODUCTS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, products:[]};\r\n        case actions.LOAD_PRODUCTS_SUCCESS:\r\n            const correctedPrice = action.payload.map(prod => Object.defineProperty(prod,\"price\",{value:prod.price / 100}))\r\n            console.log(action.payload)\r\n            console.log(correctedPrice)\r\n            return {...state, isLoading: false, errMess: null, products: correctedPrice};\r\n        case actions.LOADING_FAILDED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n        case actions.SHOW_SEARCH_RESULTS:\r\n            switch(action.payload) {\r\n                case \"women\":\r\n                    let resultWomen = state.products.filter(item => item.category === \"women's clothing\");\r\n                    return {...state, isLoading: false, errMess: null, searchResults: resultWomen, products: state.products};\r\n\r\n                case \"men\":\r\n                    let resultMen = state.products.filter(item => item.category === \"men's clothing\");\r\n                    return {...state, isLoading: false, errMess: null, searchResults: resultMen, products: state.products};\r\n\r\n                case \"jewelery\":\r\n                    let resultJewelry = state.products.filter(item => item.category === action.payload);\r\n                    return {...state, isLoading: false, errMess: null, searchResults: resultJewelry, products: state.products}\r\n\r\n                case \"electronics\":\r\n                    let resultElectronics= state.products.filter(item => item.category === action.payload);\r\n                    return {...state, isLoading: false, errMess: null, searchResults: resultElectronics, products: state.products}\r\n                        \r\n                default:                 \r\n                    let resultProducts =  state.products.filter(item => {\r\n                    return item.title.toLowerCase().includes(action.payload.toLowerCase()) || item.description.toLowerCase().includes(action.payload.toLowerCase())                        \r\n                    })\r\n                    if (state.products.length === resultProducts.length) {\r\n                        resultProducts = null\r\n                    }\r\n                    return {...state, isLoading: false, errMess: null, searchResults: resultProducts, products: state.products}\r\n            } \r\n        default:\r\n            return state;\r\n    }\r\n};","import * as actions from \"./actions\"\r\n\r\n\r\nexport const cartReducer = ( state = {\r\n    cartItems: [], \r\n    }, action) => { \r\n    switch(action.type) {\r\n        case actions.CART_ITEMS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, cartItems:[]};\r\n        case actions.CART_ITEMS_SUCCESS:\r\n           const correctedPrice_cart = action.payload.map(prod => Object.defineProperty(prod,\"price\",{value:prod.price / 100}))\r\n            return {...state, isLoading: false, errMess: null, cartItems: correctedPrice_cart };\r\n        case actions.CART_ITEMS_FAILDED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n        case actions.ADD_PRODUCT_TO_CART:\r\n        const hasTheItem  = state.cartItems.some((item) => item._id === action.payload._id);\r\n            if(!hasTheItem)  { \r\n                action.payload.qty = 1\r\n                return {...state, \r\n                    cartItems: state.cartItems.concat(action.payload),\r\n                    };\r\n            } else {\r\n                    return {...state, \r\n                        cartItems: state.cartItems.map(item => {\r\n                            if (item.id === action.payload._id) {\r\n                                item.qty++\r\n                            }\r\n                            return item\r\n                        })}\r\n            } \r\n        case actions.REMOVE_PRODUCT_FROM_CART:\r\n            if (action.payload == null){\r\n                return {...state, cartItems: []}\r\n            } else {\r\n                const updatedCart = state.cartItems.filter(item => item._id !== action.payload)\r\n                return {...state, cartItems: updatedCart};\r\n            }\r\n            \r\n        case actions.CART_QTY_UP:\r\n            return {...state, \r\n                cartItems: state.cartItems.map(item => {\r\n                    if (item._id === action.payload) {\r\n                        item.qty++\r\n                    }\r\n                    return item\r\n                })\r\n                    \r\n            }    \r\n\r\n        case actions.CART_QTY_DOWN:\r\n            const targetItem = state.cartItems.find(item => item._id === action.payload);\r\n            if (targetItem.qty >= 2) {\r\n                return {...state, \r\n                    cartItems: state.cartItems.map(item => {\r\n                        if (item._id === action.payload) {\r\n                            item.qty--\r\n                        }\r\n                        return item\r\n                    })       \r\n                } \r\n\r\n            } else {\r\n                const updatedCart = state.cartItems.filter(item => item._id !== action.payload)\r\n                 return {...state, cartItems: updatedCart}\r\n            }\r\n            \r\n\r\n        default:\r\n            return state;\r\n    } \r\n\r\n}","\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport AllProducts from './components/AllProducts';\nimport Product from './components/Product';\nimport Cart from './components/Cart';\nimport Header from './components/Header';\nimport {BrowserRouter as Router, Switch,Route,Redirect } from 'react-router-dom';\nimport {configureStore} from './redux/store';\n//import {persistStore} from 'redux-persist';\n//import { PersistGate } from 'redux-persist/integration/react';\n\n\nconst store = configureStore();\n//const persistor = persistStore(store);\n\nfunction App() {\n  return (\n    <Provider  store = {store}>\n\n      {/* <PersistGate\n         loading = {<div>Loading...</div>}  > \n         persistor = {persistor}   */}\n        <Router>\n          <div className=\"App\">\n            <Header />\n            <Switch>\n                <Route path = '/products' exact component = {AllProducts} /> \n                <Route path = '/' component = {AllProducts} /> \n                <Route path = '/products/:id' component = {Product} width = '20%' /> \n                <Route path = '/cart' component = {Cart} width = '20%' />\n                <Redirect to ='/products' /> \n            </Switch>\n          </div>\n        </Router>\n     {/*  </PersistGate>   */}\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n     \n        <App />\n     \n   \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}